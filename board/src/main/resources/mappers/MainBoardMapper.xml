<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.main.board.mainBoard.repository.MainBoardRepository">


    <select id="getMainBoardForOffset" parameterType="com.main.board.mainBoard.DTO.OffsetRequest" resultType="com.main.board.mainBoard.DTO.MainBoardPostResponse">
        SELECT p.id AS postId,
               p.title AS postTitle,
               p.viewcount AS viewCount,
               p.like_count AS likeCount,
               p.bad_count AS badCount,
               p.created_at AS createdAt,
               m.email,
               (SELECT COUNT(*) FROM comment c WHERE c.post_id = p.id) AS commentCount
        FROM post p
        JOIN member m ON p.member_id = m.id
        <where>
            <if test="keyword != null and keyword != ''">
                AND p.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        <if test="sort != null">
            ORDER BY p.id DESC
        </if>
        <if test="sort == null">
            ORDER BY p.id ASC
        </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getPost" parameterType="com.main.board.mainBoard.DTO.OffsetRequest" resultType="com.main.board.mainBoard.DTO.PostResponse">
        SELECT id AS postId,
               title AS postTitle,
               content AS postContent,
               viewcount AS viewCount,
               like_count AS likeCount,
               bad_count AS badCount,
               created_at AS createdAt
       FROM post
        <where>
            <if test="keyword != null and keyword != ''">
                AND title LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        <if test="sort != null">
            ORDER BY id DESC
        </if>
        <if test="sort == null">
            ORDER BY id ASC
        </if>
       LIMIT #{offset}, #{limit}
    </select>

    <select id="getEmail" parameterType="Long" resultType="com.main.board.mainBoard.DTO.EmailResponse">
        SELECT m.email
        FROM member m
                 JOIN post p ON p.member_id = m.id
        WHERE p.id = #{postId}
    </select>

    <select id="getCommentCount" parameterType="Long" resultType="com.main.board.mainBoard.DTO.CommentCountResponse">
        SELECT COUNT(*) AS commentCount
        FROM comment c
        WHERE c.post_id = #{postId}
    </select>

    <select id="getMainBoardForCursor" parameterType="com.main.board.mainBoard.DTO.CursorRequest" resultType="com.main.board.mainBoard.DTO.MainBoardPostResponse">
        SELECT p.id AS postId,
        p.title AS postTitle,
        p.viewcount AS viewCount,
        p.like_count AS likeCount,
        p.bad_count AS badCount,
        p.created_at AS createdAt,
        m.email,
        (SELECT COUNT(*) FROM comment c WHERE c.post_id = p.id) AS commentCount
        FROM post p
        JOIN member m ON p.member_id = m.id
        <where>
            <if test="cursorId != null">
                 AND p.id > #{cursorId}
            </if>
            <if test="keyword != null and keyword != ''">
                 AND p.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        <if test="sort != null">
            ORDER BY p.id DESC
        </if>
        <if test="sort == null">
            ORDER BY p.id ASC
        </if>
        LIMIT #{limit}
    </select>

</mapper>